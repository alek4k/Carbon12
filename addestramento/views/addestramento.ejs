<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <meta author="Carbon12">
    <title>Pagina di addestramento</title>
    <link href="/css/style.css" rel="stylesheet" type="text/css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
</head>
<body>
<img src="/images/C.png" alt=""/>
<h1>Predire in Grafana</h1>
<h2>Pagina di addestramento</h2>
<p>In questa pagina Ã¨ possibile addestrare il modello di predizione
    per ottenere il predittore da inserire nel plug-in</p>
<form action="fileupload" method="post" enctype="multipart/form-data">
    <fieldset>
        <% if (error == 'Struttura csv non valida') { %>
            <p class='error'>Struttura file csv non valida: la prima colonna deve avere etichetta <b>Time</b>,
                l'ultima etichetta <b>Labels</b></p>
        <%} else { %>
            <p class='error'><%= error %></p>
        <%}%>
        <label for="trainFile">Seleziona il file coi dati di addestramento (formato CSV):</label>
        <input type="file"  id="trainFile" value="upload file" accept=".csv" name="trainFile" required>
        <label for="configFile">Seleziona il file con la configurazione del modello (formato JSON):</label>
        <input type="file" id="configFile" value="upload file" accept=".json" name="configFile">
        <label for="modelType">Seleziona il modello da addestrare:</label>
        <select name="modello" id="modelType">
            <option selected value="SVM">SVM</option>
            <option value="RL">RL</option>
        </select>
        <label for="note">Inserisci delle note per il predittore</label>
        <textarea id="note" rows="4" cols="50" placeholder="le tue note..." name="note" required></textarea>
        <label for="nomeFile">Inserisci il nome del file Predittore</label>
        <input type="text" id="nomeFile" name="nomeFile" placeholder="predittore">
        <input type="submit" id="submit" value="AVVIO ADDESTRAMENTO">
    </fieldset>
</form>
<div id="mychart">
    <canvas id="chart" width="50px" height="50px"></canvas>
</div>

<script>
    $(document).ready(function(){
        $(document).on('change', '#trainFile', function(){
            var name = document.getElementById("trainFile").files[0].name;
            var form_data = new FormData();
            var ext = name.split('.').pop().toLowerCase();
            if(jQuery.inArray(ext, ['csv']) !== -1)
            {
                form_data.append('trainFile', document.getElementById('trainFile').files[0]);
                let drawChart = function (response) {
                        const result = JSON.parse(response);
                        const data = result[0];
                        const label = result[1];
                        const xAxesName = result[2][0];
                        const yAxesName = result[2][1];
                        let dataLabel = 'correlazione ' + xAxesName + '-' + yAxesName;
                        let buildData = [];
                        for (var i = 0; i < data.length; i++) {
                            buildData.push({x: data[i][0], y: data[i][1]});
                            
                        }

                        const ctx = document.getElementById('chart').getContext('2d');
                        const scatterChart = new Chart(ctx, {
                            type: 'scatter',
                            data: {
                                datasets: [{
                                    label: dataLabel,
                                    data: buildData,
                                    backgroundColor: 'rgba(189, 232, 255, 0.5)',
                                    borderColor:  'rgba(22, 117, 170, 1)'
                                }]
                            },
                            options: {
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: xAxesName
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: yAxesName
                                        }
                                    }]
                                }
                            }
                        });

                }
                let SVM_Chart = function (response) {
                        const result = JSON.parse(response);
                        const data = result[0];
                        const label = result[1];
                        const xAxesName = result[2][0];
                        const yAxesName = result[2][1];
                        let greenData = [];
                        let redData = [];
                        for (var i = 0; i < data.length; i++) {
                            if(label[i]===1)
                                greenData.push({x: data[i][0], y: data[i][1]});
                            else 
                                redData.push({x: data[i][0], y: data[i][1]});
                            
                        }
                        const ctx = document.getElementById('chart').getContext('2d');
                        const scatterChart = new Chart(ctx, {
                            type: 'scatter',
                            data: {
                                datasets: [{
                                    label: 'Green Data',
                                    data: greenData,
                                    backgroundColor: 'rgba(80, 220, 108, 0.5)',
                                    borderColor:  'rgba(27, 115, 45, 1)'
                                },{
                                    label: 'Red Data',
                                    data: redData,
                                    backgroundColor: 'rgba(222, 83, 83, 0.5)',
                                    borderColor:  'rgba(216, 18, 18, 1)'
                                }]
                            },
                            options: {
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: xAxesName
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: yAxesName
                                        }
                                    }]
                                }
                            }
                        });

                }
                let RL_Chart = function (response) {
                        const result = JSON.parse(response);
                        const data = result[0];
                        const label = result[1];
                        const xAxesName = result[2][0];
                        const yAxesName = result[2][1];
                        let dataLabel = 'correlazione ' + xAxesName + '-' + yAxesName;
                        let pointData = [];
                        for (var i = 0; i < data.length; i++) {
                            pointData.push({x: data[i][0], y: data[i][1]});
                            
                        }
                        let lineData = []; 
                        lineData.push({x: data[0][0], y: label[0]});
                        lineData.push({x: data[data.length-1][0], y: label[data.length-1]});
                        console.log(label)
                        const ctx = document.getElementById('chart').getContext('2d');
                        const scatterChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                datasets: [{
                                    type: 'scatter',
                                    label: 'Data',
                                    data: pointData,
                                    backgroundColor: 'rgba(189, 232, 255, 0.5)',
                                    borderColor:  'rgba(22, 117, 170, 1)',
                                    xAxisID: 'x-axis-1'
                                },{
                                    type: 'line',
                                    label: 'Linear Regression',
                                    data: lineData,
                                    backgroundColor: 'rgba(222, 83, 83, 0.5)',
                                    borderColor:  'rgba(216, 18, 18, 1)',
                                    fill: false,
                                    pointRadius: 0
                                }]
                            },
                            options: {
                                title: {
                                    display: true,
                                    text: 'Chart.js - Line Chart With Multiple X Scales (X Axes)'
                                },
                                scales: {
                                    xAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: xAxesName
                                        }
                                    }, {
                                        id: 'x-axis-1',
                                        type: 'linear',
                                        display: true,
                                        ticks: {
                                        min: 9000,
                                        max: 18000,
                                        stepSize: 35
                                        }
                                    }],
                                    yAxes: [{
                                        display: true,
                                        scaleLabel: {
                                            display: true,
                                            labelString: yAxesName
                                        }
                                    }]
                                }
                            }
                        });

                }
                $.ajax({
                    url:"/loadCsv",
                    method:"POST",
                    data: form_data,
                    contentType: false,
                    cache: false,
                    processData: false,
                    success: RL_Chart
                });
                
            }
        });
    });
   
</script>

</body>
</html>
